dohq_teamcity.CloudInstanceApi
######################################

.. note::

   + All ``serve_*`` method have aliases with get: ``serve_something`` == ``get_something``
   + Some API have ``get`` method - default method to get object by locator (e.g ``agent_api.get('id:123')`` return ``Agent`` model by id
   + See more examples on page :doc:`/examples/api/CloudInstanceApi` and model examples
   + This is autogenerated page, don't change them directly, use template. Read more in :doc:`/development`

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Method
     - HTTP request
   * - :ref:`get_all_cloud_images`
     - **GET** ``/app/rest/cloud/images``
   * - :ref:`get_all_cloud_instances`
     - **GET** ``/app/rest/cloud/instances``
   * - :ref:`get_all_cloud_profiles`
     - **GET** ``/app/rest/cloud/profiles``
   * - :ref:`get_cloud_image`
     - **GET** ``/app/rest/cloud/images/{imageLocator}``
   * - :ref:`get_cloud_instance`
     - **GET** ``/app/rest/cloud/instances/{instanceLocator}``
   * - :ref:`get_cloud_profile`
     - **GET** ``/app/rest/cloud/profiles/{profileLocator}``
   * - :ref:`start_instance`
     - **POST** ``/app/rest/cloud/instances``
   * - :ref:`stop_instance`
     - **DELETE** ``/app/rest/cloud/instances/{instanceLocator}``

.. _get_all_cloud_images:

get_all_cloud_images
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        # Get all cloud images.
        api_response = tc.cloud_instance_api.get_all_cloud_images(locator=locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling CloudInstanceApi->get_all_cloud_images: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `CloudImages <../models/CloudImages.html>`_

`Back to top <#>`_

.. _get_all_cloud_instances:

get_all_cloud_instances
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        # Get all cloud instances.
        api_response = tc.cloud_instance_api.get_all_cloud_instances(locator=locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling CloudInstanceApi->get_all_cloud_instances: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `CloudInstances <../models/CloudInstances.html>`_

`Back to top <#>`_

.. _get_all_cloud_profiles:

get_all_cloud_profiles
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        # Get all cloud profiles.
        api_response = tc.cloud_instance_api.get_all_cloud_profiles(locator=locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling CloudInstanceApi->get_all_cloud_profiles: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `CloudProfiles <../models/CloudProfiles.html>`_

`Back to top <#>`_

.. _get_cloud_image:

get_cloud_image
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    image_locator = 'image_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        # Get cloud image matching the locator.
        api_response = tc.cloud_instance_api.get_cloud_image(image_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling CloudInstanceApi->get_cloud_image: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **image_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `CloudImage <../models/CloudImage.html>`_

`Back to top <#>`_

.. _get_cloud_instance:

get_cloud_instance
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    instance_locator = 'instance_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        # Get cloud instance matching the locator.
        api_response = tc.cloud_instance_api.get_cloud_instance(instance_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling CloudInstanceApi->get_cloud_instance: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **instance_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `CloudInstance <../models/CloudInstance.html>`_

`Back to top <#>`_

.. _get_cloud_profile:

get_cloud_profile
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    profile_locator = 'profile_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        # Get cloud profile matching the locator.
        api_response = tc.cloud_instance_api.get_cloud_profile(profile_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling CloudInstanceApi->get_cloud_profile: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **profile_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `CloudProfile <../models/CloudProfile.html>`_

`Back to top <#>`_

.. _start_instance:

start_instance
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    body = dohq_teamcity.CloudInstance() # CloudInstance |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        # Start a new cloud instance.
        tc.cloud_instance_api.start_instance(body=body, fields=fields)
    except ApiException as e:
        print("Exception when calling CloudInstanceApi->start_instance: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **body**
     - `CloudInstance <../models/CloudInstance.html>`_
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    void (empty response body)

`Back to top <#>`_

.. _stop_instance:

stop_instance
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    instance_locator = 'instance_locator_example' # str | 

    try:
        # Stop cloud instance matching the locator.
        tc.cloud_instance_api.stop_instance(instance_locator)
    except ApiException as e:
        print("Exception when calling CloudInstanceApi->stop_instance: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **instance_locator**
     - **str**
     - 

Return type:
    void (empty response body)

`Back to top <#>`_

