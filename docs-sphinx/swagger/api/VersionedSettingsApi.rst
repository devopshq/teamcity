dohq_teamcity.VersionedSettingsApi
######################################

.. note::

   + All ``serve_*`` method have aliases with get: ``serve_something`` == ``get_something``
   + Some API have ``get`` method - default method to get object by locator (e.g ``agent_api.get('id:123')`` return ``Agent`` model by id
   + See more examples on page :doc:`/examples/api/VersionedSettingsApi` and model examples
   + This is autogenerated page, don't change them directly, use template. Read more in :doc:`/development`

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Method
     - HTTP request
   * - :ref:`add_versioned_settings_tokens`
     - **POST** ``/app/rest/projects/{locator}/versionedSettings/tokens``
   * - :ref:`check_for_versioned_settings_changes`
     - **POST** ``/app/rest/projects/{locator}/versionedSettings/checkForChanges``
   * - :ref:`commit_current_settings`
     - **POST** ``/app/rest/projects/{locator}/versionedSettings/commitCurrentSettings``
   * - :ref:`delete_versioned_settings_config_parameter`
     - **DELETE** ``/app/rest/projects/{locator}/versionedSettings/config/parameters/{name}``
   * - :ref:`delete_versioned_settings_tokens`
     - **DELETE** ``/app/rest/projects/{locator}/versionedSettings/tokens``
   * - :ref:`get_versioned_settings_config`
     - **GET** ``/app/rest/projects/{locator}/versionedSettings/config``
   * - :ref:`get_versioned_settings_config_parameter`
     - **GET** ``/app/rest/projects/{locator}/versionedSettings/config/parameters/{name}``
   * - :ref:`get_versioned_settings_context_parameters`
     - **GET** ``/app/rest/projects/{locator}/versionedSettings/contextParameters``
   * - :ref:`get_versioned_settings_projects_to_load`
     - **GET** ``/app/rest/projects/{locator}/versionedSettings/affectedProjects``
   * - :ref:`get_versioned_settings_status`
     - **GET** ``/app/rest/projects/{locator}/versionedSettings/status``
   * - :ref:`get_versioned_settings_tokens`
     - **GET** ``/app/rest/projects/{locator}/versionedSettings/tokens``
   * - :ref:`load_settings_from_vcs`
     - **POST** ``/app/rest/projects/{locator}/versionedSettings/loadSettings``
   * - :ref:`set_versioned_settings_config`
     - **PUT** ``/app/rest/projects/{locator}/versionedSettings/config``
   * - :ref:`set_versioned_settings_config_parameter`
     - **PUT** ``/app/rest/projects/{locator}/versionedSettings/config/parameters/{name}``
   * - :ref:`set_versioned_settings_context_parameters`
     - **PUT** ``/app/rest/projects/{locator}/versionedSettings/contextParameters``

.. _add_versioned_settings_tokens:

add_versioned_settings_tokens
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    body = dohq_teamcity.VersionedSettingsTokens() # VersionedSettingsTokens |  (optional)

    try:
        # Add Versioned Settings Tokens.
        api_response = tc.versioned_settings_api.add_versioned_settings_tokens(locator, body=body)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->add_versioned_settings_tokens: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **body**
     - `VersionedSettingsTokens <../models/VersionedSettingsTokens.html>`_
     - [optional] 

Return type:
    `VersionedSettingsTokens <../models/VersionedSettingsTokens.html>`_

`Back to top <#>`_

.. _check_for_versioned_settings_changes:

check_for_versioned_settings_changes
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 

    try:
        # Check for changes in Versioned Settings.
        tc.versioned_settings_api.check_for_versioned_settings_changes(locator)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->check_for_versioned_settings_changes: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 

Return type:
    void (empty response body)

`Back to top <#>`_

.. _commit_current_settings:

commit_current_settings
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 

    try:
        # Perform Versioned Settings action: Commit current settings to VCS.
        tc.versioned_settings_api.commit_current_settings(locator)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->commit_current_settings: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 

Return type:
    void (empty response body)

`Back to top <#>`_

.. _delete_versioned_settings_config_parameter:

delete_versioned_settings_config_parameter
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    name = 'name_example' # str | 

    try:
        # Delete Versioned Settings config parameter value.
        tc.versioned_settings_api.delete_versioned_settings_config_parameter(locator, name)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->delete_versioned_settings_config_parameter: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **name**
     - **str**
     - 

Return type:
    void (empty response body)

`Back to top <#>`_

.. _delete_versioned_settings_tokens:

delete_versioned_settings_tokens
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    body = dohq_teamcity.VersionedSettingsTokens() # VersionedSettingsTokens |  (optional)

    try:
        # Delete Versioned Settings Tokens.
        api_response = tc.versioned_settings_api.delete_versioned_settings_tokens(locator, body=body)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->delete_versioned_settings_tokens: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **body**
     - `VersionedSettingsTokens <../models/VersionedSettingsTokens.html>`_
     - [optional] 

Return type:
    `VersionedSettingsTokens <../models/VersionedSettingsTokens.html>`_

`Back to top <#>`_

.. _get_versioned_settings_config:

get_versioned_settings_config
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        # Get Versioned Settings config.
        api_response = tc.versioned_settings_api.get_versioned_settings_config(locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->get_versioned_settings_config: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `VersionedSettingsConfig <../models/VersionedSettingsConfig.html>`_

`Back to top <#>`_

.. _get_versioned_settings_config_parameter:

get_versioned_settings_config_parameter
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    name = 'name_example' # str | 

    try:
        # Get Versioned Settings config parameter value.
        api_response = tc.versioned_settings_api.get_versioned_settings_config_parameter(locator, name)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->get_versioned_settings_config_parameter: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **name**
     - **str**
     - 

Return type:
    **str**

`Back to top <#>`_

.. _get_versioned_settings_context_parameters:

get_versioned_settings_context_parameters
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 

    try:
        # Get Versioned Settings Context Parameters.
        api_response = tc.versioned_settings_api.get_versioned_settings_context_parameters(locator)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->get_versioned_settings_context_parameters: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 

Return type:
    `VersionedSettingsContextParameters <../models/VersionedSettingsContextParameters.html>`_

`Back to top <#>`_

.. _get_versioned_settings_projects_to_load:

get_versioned_settings_projects_to_load
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        # Get a list of projects that are affected by Load Settings from VCS action.
        api_response = tc.versioned_settings_api.get_versioned_settings_projects_to_load(locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->get_versioned_settings_projects_to_load: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Projects <../models/Projects.html>`_

`Back to top <#>`_

.. _get_versioned_settings_status:

get_versioned_settings_status
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        # Get current status of Versioned Settings.
        api_response = tc.versioned_settings_api.get_versioned_settings_status(locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->get_versioned_settings_status: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `VersionedSettingsStatus <../models/VersionedSettingsStatus.html>`_

`Back to top <#>`_

.. _get_versioned_settings_tokens:

get_versioned_settings_tokens
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    status = 'status_example' # str |  (optional)

    try:
        # Get Versioned Settings Tokens.
        api_response = tc.versioned_settings_api.get_versioned_settings_tokens(locator, status=status)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->get_versioned_settings_tokens: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **status**
     - **str**
     - [optional] 

Return type:
    `VersionedSettingsTokens <../models/VersionedSettingsTokens.html>`_

`Back to top <#>`_

.. _load_settings_from_vcs:

load_settings_from_vcs
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        # Perform Versioned Settings action: Load Setting from VCS.
        api_response = tc.versioned_settings_api.load_settings_from_vcs(locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->load_settings_from_vcs: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Projects <../models/Projects.html>`_

`Back to top <#>`_

.. _set_versioned_settings_config:

set_versioned_settings_config
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    body = dohq_teamcity.VersionedSettingsConfig() # VersionedSettingsConfig |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        # Set Verseioned Settings config.
        api_response = tc.versioned_settings_api.set_versioned_settings_config(locator, body=body, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->set_versioned_settings_config: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **body**
     - `VersionedSettingsConfig <../models/VersionedSettingsConfig.html>`_
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `VersionedSettingsConfig <../models/VersionedSettingsConfig.html>`_

`Back to top <#>`_

.. _set_versioned_settings_config_parameter:

set_versioned_settings_config_parameter
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    name = 'name_example' # str | 
    body = 'body_example' # str |  (optional)

    try:
        # Set Versioned Settings config parameter value.
        api_response = tc.versioned_settings_api.set_versioned_settings_config_parameter(locator, name, body=body)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->set_versioned_settings_config_parameter: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **name**
     - **str**
     - 
   * - **body**
     - **str**
     - [optional] 

Return type:
    **str**

`Back to top <#>`_

.. _set_versioned_settings_context_parameters:

set_versioned_settings_context_parameters
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str | 
    body = dohq_teamcity.VersionedSettingsContextParameters() # VersionedSettingsContextParameters |  (optional)

    try:
        # Set Versioned Settings Context Parameters.
        api_response = tc.versioned_settings_api.set_versioned_settings_context_parameters(locator, body=body)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling VersionedSettingsApi->set_versioned_settings_context_parameters: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - 
   * - **body**
     - `VersionedSettingsContextParameters <../models/VersionedSettingsContextParameters.html>`_
     - [optional] 

Return type:
    `VersionedSettingsContextParameters <../models/VersionedSettingsContextParameters.html>`_

`Back to top <#>`_

