dohq_teamcity.MuteApi
######################################

.. note::

   + All ``serve_*`` method have aliases with get: ``serve_something`` == ``get_something``
   + Some API have ``get`` method - default method to get object by locator (e.g ``agent_api.get('id:123')`` return ``Agent`` model by id
   + See more examples on page :doc:`/examples/api/MuteApi` and model examples
   + This is autogenerated page, don't change them directly, use template. Read more in :doc:`/development`

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Method
     - HTTP request
   * - :ref:`get_all_muted_tests`
     - **GET** ``/app/rest/mutes``
   * - :ref:`get_muted_test`
     - **GET** ``/app/rest/mutes/{muteLocator}``
   * - :ref:`mute_multiple_tests`
     - **POST** ``/app/rest/mutes/multiple``
   * - :ref:`mute_test`
     - **POST** ``/app/rest/mutes``
   * - :ref:`unmute_test`
     - **DELETE** ``/app/rest/mutes/{muteLocator}``

.. _get_all_muted_tests:

get_all_muted_tests
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        # Get all muted tests.
        api_response = tc.mute_api.get_all_muted_tests(locator=locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling MuteApi->get_all_muted_tests: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Mutes <../models/Mutes.html>`_

`Back to top <#>`_

.. _get_muted_test:

get_muted_test
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    mute_locator = 'mute_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        # Get a muted test.
        api_response = tc.mute_api.get_muted_test(mute_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling MuteApi->get_muted_test: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **mute_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Mute <../models/Mute.html>`_

`Back to top <#>`_

.. _mute_multiple_tests:

mute_multiple_tests
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    body = dohq_teamcity.Mutes() # Mutes |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        # Mute multiple tests.
        api_response = tc.mute_api.mute_multiple_tests(body=body, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling MuteApi->mute_multiple_tests: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **body**
     - `Mutes <../models/Mutes.html>`_
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Mutes <../models/Mutes.html>`_

`Back to top <#>`_

.. _mute_test:

mute_test
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    body = dohq_teamcity.Mute() # Mute |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        # Mute a test.
        api_response = tc.mute_api.mute_test(body=body, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling MuteApi->mute_test: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **body**
     - `Mute <../models/Mute.html>`_
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Mute <../models/Mute.html>`_

`Back to top <#>`_

.. _unmute_test:

unmute_test
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    mute_locator = 'mute_locator_example' # str | 
    body = 'body_example' # str |  (optional)

    try:
        # Unmute the matching test.
        tc.mute_api.unmute_test(mute_locator, body=body)
    except ApiException as e:
        print("Exception when calling MuteApi->unmute_test: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **mute_locator**
     - **str**
     - 
   * - **body**
     - **str**
     - [optional] 

Return type:
    void (empty response body)

`Back to top <#>`_

