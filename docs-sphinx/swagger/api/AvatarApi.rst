dohq_teamcity.AvatarApi
######################################

.. note::

   + All ``serve_*`` method have aliases with get: ``serve_something`` == ``get_something``
   + Some API have ``get`` method - default method to get object by locator (e.g ``agent_api.get('id:123')`` return ``Agent`` model by id
   + See more examples on page :doc:`/examples/api/AvatarApi` and model examples
   + This is autogenerated page, don't change them directly, use template. Read more in :doc:`/development`

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Method
     - HTTP request
   * - :ref:`delete_avatar`
     - **DELETE** ``/app/rest/avatars/{userLocator}``
   * - :ref:`get_avatar`
     - **GET** ``/app/rest/avatars/{userLocator}/{size}/avatar.png``
   * - :ref:`get_avatar_with_hash`
     - **GET** ``/app/rest/avatars/{userLocator}/{size}/avatar.{hash}.png``
   * - :ref:`put_avatar`
     - **PUT** ``/app/rest/avatars/{userLocator}``

.. _delete_avatar:

delete_avatar
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    user_locator = 'user_locator_example' # str | 

    try:
        # Delete a users avatar
        tc.avatar_api.delete_avatar(user_locator)
    except ApiException as e:
        print("Exception when calling AvatarApi->delete_avatar: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **user_locator**
     - **str**
     - 

Return type:
    void (empty response body)

`Back to top <#>`_

.. _get_avatar:

get_avatar
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    user_locator = 'user_locator_example' # str | 
    size = 56 # int | avatar's size

    try:
        # Get a users avatar
        tc.avatar_api.get_avatar(user_locator, size)
    except ApiException as e:
        print("Exception when calling AvatarApi->get_avatar: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **user_locator**
     - **str**
     - 
   * - **size**
     - **int**
     - 

Return type:
    void (empty response body)

`Back to top <#>`_

.. _get_avatar_with_hash:

get_avatar_with_hash
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    user_locator = 'user_locator_example' # str | 
    size = 56 # int | avatar's size
    hash = 'hash_example' # str | 

    try:
        # Get a users avatar
        tc.avatar_api.get_avatar_with_hash(user_locator, size, hash)
    except ApiException as e:
        print("Exception when calling AvatarApi->get_avatar_with_hash: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **user_locator**
     - **str**
     - 
   * - **size**
     - **int**
     - 
   * - **hash**
     - **str**
     - 

Return type:
    void (empty response body)

`Back to top <#>`_

.. _put_avatar:

put_avatar
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    user_locator = 'user_locator_example' # str | 
    avatar = '/path/to/file.txt' # file |  (optional)

    try:
        # Update a users avatar
        tc.avatar_api.put_avatar(user_locator, avatar=avatar)
    except ApiException as e:
        print("Exception when calling AvatarApi->put_avatar: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **user_locator**
     - **str**
     - 
   * - **avatar**
     - **file**
     - [optional] 

Return type:
    void (empty response body)

`Back to top <#>`_

