# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.build_type import BuildType  # noqa: F401,E501
# from dohq_teamcity.models.properties import Properties  # noqa: F401,E501


class NewBuildTypeDescription(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'copy_all_associated_settings': 'bool',
        'projects_ids_map': 'Properties',
        'build_types_ids_map': 'Properties',
        'vcs_roots_ids_map': 'Properties',
        'name': 'str',
        'id': 'str',
        'source_build_type_locator': 'str',
        'source_build_type': 'BuildType'
    }

    attribute_map = {
        'copy_all_associated_settings': 'copyAllAssociatedSettings',
        'projects_ids_map': 'projectsIdsMap',
        'build_types_ids_map': 'buildTypesIdsMap',
        'vcs_roots_ids_map': 'vcsRootsIdsMap',
        'name': 'name',
        'id': 'id',
        'source_build_type_locator': 'sourceBuildTypeLocator',
        'source_build_type': 'sourceBuildType'
    }

    def __init__(self, copy_all_associated_settings=None, projects_ids_map=None, build_types_ids_map=None, vcs_roots_ids_map=None, name=None, id=None, source_build_type_locator=None, source_build_type=None, teamcity=None):  # noqa: E501
        """NewBuildTypeDescription - a model defined in Swagger"""  # noqa: E501

        self._copy_all_associated_settings = None
        self._projects_ids_map = None
        self._build_types_ids_map = None
        self._vcs_roots_ids_map = None
        self._name = None
        self._id = None
        self._source_build_type_locator = None
        self._source_build_type = None
        self.discriminator = None

        if copy_all_associated_settings is not None:
            self.copy_all_associated_settings = copy_all_associated_settings
        if projects_ids_map is not None:
            self.projects_ids_map = projects_ids_map
        if build_types_ids_map is not None:
            self.build_types_ids_map = build_types_ids_map
        if vcs_roots_ids_map is not None:
            self.vcs_roots_ids_map = vcs_roots_ids_map
        if name is not None:
            self.name = name
        if id is not None:
            self.id = id
        if source_build_type_locator is not None:
            self.source_build_type_locator = source_build_type_locator
        if source_build_type is not None:
            self.source_build_type = source_build_type
        super(NewBuildTypeDescription, self).__init__(teamcity=teamcity)

    @property
    def copy_all_associated_settings(self):
        """Gets the copy_all_associated_settings of this NewBuildTypeDescription.  # noqa: E501


        :return: The copy_all_associated_settings of this NewBuildTypeDescription.  # noqa: E501
        :rtype: bool
        """
        return self._copy_all_associated_settings

    @copy_all_associated_settings.setter
    def copy_all_associated_settings(self, copy_all_associated_settings):
        """Sets the copy_all_associated_settings of this NewBuildTypeDescription.


        :param copy_all_associated_settings: The copy_all_associated_settings of this NewBuildTypeDescription.  # noqa: E501
        :type: bool
        """

        self._copy_all_associated_settings = copy_all_associated_settings

    @property
    def projects_ids_map(self):
        """Gets the projects_ids_map of this NewBuildTypeDescription.  # noqa: E501


        :return: The projects_ids_map of this NewBuildTypeDescription.  # noqa: E501
        :rtype: Properties
        """
        return self._projects_ids_map

    @projects_ids_map.setter
    def projects_ids_map(self, projects_ids_map):
        """Sets the projects_ids_map of this NewBuildTypeDescription.


        :param projects_ids_map: The projects_ids_map of this NewBuildTypeDescription.  # noqa: E501
        :type: Properties
        """

        self._projects_ids_map = projects_ids_map

    @property
    def build_types_ids_map(self):
        """Gets the build_types_ids_map of this NewBuildTypeDescription.  # noqa: E501


        :return: The build_types_ids_map of this NewBuildTypeDescription.  # noqa: E501
        :rtype: Properties
        """
        return self._build_types_ids_map

    @build_types_ids_map.setter
    def build_types_ids_map(self, build_types_ids_map):
        """Sets the build_types_ids_map of this NewBuildTypeDescription.


        :param build_types_ids_map: The build_types_ids_map of this NewBuildTypeDescription.  # noqa: E501
        :type: Properties
        """

        self._build_types_ids_map = build_types_ids_map

    @property
    def vcs_roots_ids_map(self):
        """Gets the vcs_roots_ids_map of this NewBuildTypeDescription.  # noqa: E501


        :return: The vcs_roots_ids_map of this NewBuildTypeDescription.  # noqa: E501
        :rtype: Properties
        """
        return self._vcs_roots_ids_map

    @vcs_roots_ids_map.setter
    def vcs_roots_ids_map(self, vcs_roots_ids_map):
        """Sets the vcs_roots_ids_map of this NewBuildTypeDescription.


        :param vcs_roots_ids_map: The vcs_roots_ids_map of this NewBuildTypeDescription.  # noqa: E501
        :type: Properties
        """

        self._vcs_roots_ids_map = vcs_roots_ids_map

    @property
    def name(self):
        """Gets the name of this NewBuildTypeDescription.  # noqa: E501


        :return: The name of this NewBuildTypeDescription.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NewBuildTypeDescription.


        :param name: The name of this NewBuildTypeDescription.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def id(self):
        """Gets the id of this NewBuildTypeDescription.  # noqa: E501


        :return: The id of this NewBuildTypeDescription.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NewBuildTypeDescription.


        :param id: The id of this NewBuildTypeDescription.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def source_build_type_locator(self):
        """Gets the source_build_type_locator of this NewBuildTypeDescription.  # noqa: E501


        :return: The source_build_type_locator of this NewBuildTypeDescription.  # noqa: E501
        :rtype: str
        """
        return self._source_build_type_locator

    @source_build_type_locator.setter
    def source_build_type_locator(self, source_build_type_locator):
        """Sets the source_build_type_locator of this NewBuildTypeDescription.


        :param source_build_type_locator: The source_build_type_locator of this NewBuildTypeDescription.  # noqa: E501
        :type: str
        """

        self._source_build_type_locator = source_build_type_locator

    @property
    def source_build_type(self):
        """Gets the source_build_type of this NewBuildTypeDescription.  # noqa: E501


        :return: The source_build_type of this NewBuildTypeDescription.  # noqa: E501
        :rtype: BuildType
        """
        return self._source_build_type

    @source_build_type.setter
    def source_build_type(self, source_build_type):
        """Sets the source_build_type of this NewBuildTypeDescription.


        :param source_build_type: The source_build_type of this NewBuildTypeDescription.  # noqa: E501
        :type: BuildType
        """

        self._source_build_type = source_build_type
