# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.agent import Agent  # noqa: F401,E501
# from dohq_teamcity.models.agent_pool import AgentPool  # noqa: F401,E501
# from dohq_teamcity.models.build import Build  # noqa: F401,E501
# from dohq_teamcity.models.build_type import BuildType  # noqa: F401,E501
# from dohq_teamcity.models.change import Change  # noqa: F401,E501
# from dohq_teamcity.models.group import Group  # noqa: F401,E501
# from dohq_teamcity.models.problem import Problem  # noqa: F401,E501
# from dohq_teamcity.models.project import Project  # noqa: F401,E501
# from dohq_teamcity.models.test import Test  # noqa: F401,E501
# from dohq_teamcity.models.user import User  # noqa: F401,E501
# from dohq_teamcity.models.vcs_root import VcsRoot  # noqa: F401,E501


class RelatedEntity(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type': 'str',
        'unknown': 'bool',
        'internal_id': 'str',
        'text': 'str',
        'build': 'Build',
        'build_type': 'BuildType',
        'project': 'Project',
        'user': 'User',
        'group': 'Group',
        'test': 'Test',
        'problem': 'Problem',
        'agent': 'Agent',
        'vcs_root': 'VcsRoot',
        'change': 'Change',
        'agent_pool': 'AgentPool'
    }

    attribute_map = {
        'type': 'type',
        'unknown': 'unknown',
        'internal_id': 'internalId',
        'text': 'text',
        'build': 'build',
        'build_type': 'buildType',
        'project': 'project',
        'user': 'user',
        'group': 'group',
        'test': 'test',
        'problem': 'problem',
        'agent': 'agent',
        'vcs_root': 'vcsRoot',
        'change': 'change',
        'agent_pool': 'agentPool'
    }

    def __init__(self, type=None, unknown=None, internal_id=None, text=None, build=None, build_type=None, project=None, user=None, group=None, test=None, problem=None, agent=None, vcs_root=None, change=None, agent_pool=None, teamcity=None):  # noqa: E501
        """RelatedEntity - a model defined in Swagger"""  # noqa: E501

        self._type = None
        self._unknown = None
        self._internal_id = None
        self._text = None
        self._build = None
        self._build_type = None
        self._project = None
        self._user = None
        self._group = None
        self._test = None
        self._problem = None
        self._agent = None
        self._vcs_root = None
        self._change = None
        self._agent_pool = None
        self.discriminator = None

        if type is not None:
            self.type = type
        if unknown is not None:
            self.unknown = unknown
        if internal_id is not None:
            self.internal_id = internal_id
        if text is not None:
            self.text = text
        if build is not None:
            self.build = build
        if build_type is not None:
            self.build_type = build_type
        if project is not None:
            self.project = project
        if user is not None:
            self.user = user
        if group is not None:
            self.group = group
        if test is not None:
            self.test = test
        if problem is not None:
            self.problem = problem
        if agent is not None:
            self.agent = agent
        if vcs_root is not None:
            self.vcs_root = vcs_root
        if change is not None:
            self.change = change
        if agent_pool is not None:
            self.agent_pool = agent_pool
        super(RelatedEntity, self).__init__(teamcity=teamcity)

    @property
    def type(self):
        """Gets the type of this RelatedEntity.  # noqa: E501


        :return: The type of this RelatedEntity.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this RelatedEntity.


        :param type: The type of this RelatedEntity.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def unknown(self):
        """Gets the unknown of this RelatedEntity.  # noqa: E501


        :return: The unknown of this RelatedEntity.  # noqa: E501
        :rtype: bool
        """
        return self._unknown

    @unknown.setter
    def unknown(self, unknown):
        """Sets the unknown of this RelatedEntity.


        :param unknown: The unknown of this RelatedEntity.  # noqa: E501
        :type: bool
        """

        self._unknown = unknown

    @property
    def internal_id(self):
        """Gets the internal_id of this RelatedEntity.  # noqa: E501


        :return: The internal_id of this RelatedEntity.  # noqa: E501
        :rtype: str
        """
        return self._internal_id

    @internal_id.setter
    def internal_id(self, internal_id):
        """Sets the internal_id of this RelatedEntity.


        :param internal_id: The internal_id of this RelatedEntity.  # noqa: E501
        :type: str
        """

        self._internal_id = internal_id

    @property
    def text(self):
        """Gets the text of this RelatedEntity.  # noqa: E501


        :return: The text of this RelatedEntity.  # noqa: E501
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this RelatedEntity.


        :param text: The text of this RelatedEntity.  # noqa: E501
        :type: str
        """

        self._text = text

    @property
    def build(self):
        """Gets the build of this RelatedEntity.  # noqa: E501


        :return: The build of this RelatedEntity.  # noqa: E501
        :rtype: Build
        """
        return self._build

    @build.setter
    def build(self, build):
        """Sets the build of this RelatedEntity.


        :param build: The build of this RelatedEntity.  # noqa: E501
        :type: Build
        """

        self._build = build

    @property
    def build_type(self):
        """Gets the build_type of this RelatedEntity.  # noqa: E501


        :return: The build_type of this RelatedEntity.  # noqa: E501
        :rtype: BuildType
        """
        return self._build_type

    @build_type.setter
    def build_type(self, build_type):
        """Sets the build_type of this RelatedEntity.


        :param build_type: The build_type of this RelatedEntity.  # noqa: E501
        :type: BuildType
        """

        self._build_type = build_type

    @property
    def project(self):
        """Gets the project of this RelatedEntity.  # noqa: E501


        :return: The project of this RelatedEntity.  # noqa: E501
        :rtype: Project
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this RelatedEntity.


        :param project: The project of this RelatedEntity.  # noqa: E501
        :type: Project
        """

        self._project = project

    @property
    def user(self):
        """Gets the user of this RelatedEntity.  # noqa: E501


        :return: The user of this RelatedEntity.  # noqa: E501
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this RelatedEntity.


        :param user: The user of this RelatedEntity.  # noqa: E501
        :type: User
        """

        self._user = user

    @property
    def group(self):
        """Gets the group of this RelatedEntity.  # noqa: E501


        :return: The group of this RelatedEntity.  # noqa: E501
        :rtype: Group
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this RelatedEntity.


        :param group: The group of this RelatedEntity.  # noqa: E501
        :type: Group
        """

        self._group = group

    @property
    def test(self):
        """Gets the test of this RelatedEntity.  # noqa: E501


        :return: The test of this RelatedEntity.  # noqa: E501
        :rtype: Test
        """
        return self._test

    @test.setter
    def test(self, test):
        """Sets the test of this RelatedEntity.


        :param test: The test of this RelatedEntity.  # noqa: E501
        :type: Test
        """

        self._test = test

    @property
    def problem(self):
        """Gets the problem of this RelatedEntity.  # noqa: E501


        :return: The problem of this RelatedEntity.  # noqa: E501
        :rtype: Problem
        """
        return self._problem

    @problem.setter
    def problem(self, problem):
        """Sets the problem of this RelatedEntity.


        :param problem: The problem of this RelatedEntity.  # noqa: E501
        :type: Problem
        """

        self._problem = problem

    @property
    def agent(self):
        """Gets the agent of this RelatedEntity.  # noqa: E501


        :return: The agent of this RelatedEntity.  # noqa: E501
        :rtype: Agent
        """
        return self._agent

    @agent.setter
    def agent(self, agent):
        """Sets the agent of this RelatedEntity.


        :param agent: The agent of this RelatedEntity.  # noqa: E501
        :type: Agent
        """

        self._agent = agent

    @property
    def vcs_root(self):
        """Gets the vcs_root of this RelatedEntity.  # noqa: E501


        :return: The vcs_root of this RelatedEntity.  # noqa: E501
        :rtype: VcsRoot
        """
        return self._vcs_root

    @vcs_root.setter
    def vcs_root(self, vcs_root):
        """Sets the vcs_root of this RelatedEntity.


        :param vcs_root: The vcs_root of this RelatedEntity.  # noqa: E501
        :type: VcsRoot
        """

        self._vcs_root = vcs_root

    @property
    def change(self):
        """Gets the change of this RelatedEntity.  # noqa: E501


        :return: The change of this RelatedEntity.  # noqa: E501
        :rtype: Change
        """
        return self._change

    @change.setter
    def change(self, change):
        """Sets the change of this RelatedEntity.


        :param change: The change of this RelatedEntity.  # noqa: E501
        :type: Change
        """

        self._change = change

    @property
    def agent_pool(self):
        """Gets the agent_pool of this RelatedEntity.  # noqa: E501


        :return: The agent_pool of this RelatedEntity.  # noqa: E501
        :rtype: AgentPool
        """
        return self._agent_pool

    @agent_pool.setter
    def agent_pool(self, agent_pool):
        """Sets the agent_pool of this RelatedEntity.


        :param agent_pool: The agent_pool of this RelatedEntity.  # noqa: E501
        :type: AgentPool
        """

        self._agent_pool = agent_pool
