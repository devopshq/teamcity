# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.permission_restrictions import PermissionRestrictions  # noqa: F401,E501


class Token(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'creation_time': 'datetime',
        'value': 'str',
        'expiration_time': 'datetime',
        'permission_restrictions': 'PermissionRestrictions'
    }

    attribute_map = {
        'name': 'name',
        'creation_time': 'creationTime',
        'value': 'value',
        'expiration_time': 'expirationTime',
        'permission_restrictions': 'permissionRestrictions'
    }

    def __init__(self, name=None, creation_time=None, value=None, expiration_time=None, permission_restrictions=None, teamcity=None):  # noqa: E501
        """Token - a model defined in Swagger"""  # noqa: E501

        self._name = None
        self._creation_time = None
        self._value = None
        self._expiration_time = None
        self._permission_restrictions = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if creation_time is not None:
            self.creation_time = creation_time
        if value is not None:
            self.value = value
        if expiration_time is not None:
            self.expiration_time = expiration_time
        if permission_restrictions is not None:
            self.permission_restrictions = permission_restrictions
        super(Token, self).__init__(teamcity=teamcity)

    @property
    def name(self):
        """Gets the name of this Token.  # noqa: E501


        :return: The name of this Token.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Token.


        :param name: The name of this Token.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def creation_time(self):
        """Gets the creation_time of this Token.  # noqa: E501


        :return: The creation_time of this Token.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this Token.


        :param creation_time: The creation_time of this Token.  # noqa: E501
        :type: datetime
        """

        self._creation_time = creation_time

    @property
    def value(self):
        """Gets the value of this Token.  # noqa: E501


        :return: The value of this Token.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Token.


        :param value: The value of this Token.  # noqa: E501
        :type: str
        """

        self._value = value

    @property
    def expiration_time(self):
        """Gets the expiration_time of this Token.  # noqa: E501


        :return: The expiration_time of this Token.  # noqa: E501
        :rtype: datetime
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this Token.


        :param expiration_time: The expiration_time of this Token.  # noqa: E501
        :type: datetime
        """

        self._expiration_time = expiration_time

    @property
    def permission_restrictions(self):
        """Gets the permission_restrictions of this Token.  # noqa: E501


        :return: The permission_restrictions of this Token.  # noqa: E501
        :rtype: PermissionRestrictions
        """
        return self._permission_restrictions

    @permission_restrictions.setter
    def permission_restrictions(self, permission_restrictions):
        """Sets the permission_restrictions of this Token.


        :param permission_restrictions: The permission_restrictions of this Token.  # noqa: E501
        :type: PermissionRestrictions
        """

        self._permission_restrictions = permission_restrictions
