# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.token import Token  # noqa: F401,E501


class Tokens(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'count': 'int',
        'token': 'list[Token]'
    }

    attribute_map = {
        'count': 'count',
        'token': 'token'
    }

    def __init__(self, count=None, token=None, teamcity=None):  # noqa: E501
        """Tokens - a model defined in Swagger"""  # noqa: E501

        self._count = None
        self._token = None
        self.discriminator = None

        if count is not None:
            self.count = count
        if token is not None:
            self.token = token
        super(Tokens, self).__init__(teamcity=teamcity)

    @property
    def count(self):
        """Gets the count of this Tokens.  # noqa: E501


        :return: The count of this Tokens.  # noqa: E501
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this Tokens.


        :param count: The count of this Tokens.  # noqa: E501
        :type: int
        """

        self._count = count

    @property
    def token(self):
        """Gets the token of this Tokens.  # noqa: E501


        :return: The token of this Tokens.  # noqa: E501
        :rtype: list[Token]
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this Tokens.


        :param token: The token of this Tokens.  # noqa: E501
        :type: list[Token]
        """

        self._token = token
