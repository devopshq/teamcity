# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.auth_modules import AuthModules  # noqa: F401,E501


class ServerAuthSettings(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'allow_guest': 'bool',
        'guest_username': 'str',
        'welcome_text': 'str',
        'collapse_login_form': 'bool',
        'per_project_permissions': 'bool',
        'email_verification': 'bool',
        'modules': 'AuthModules'
    }

    attribute_map = {
        'allow_guest': 'allowGuest',
        'guest_username': 'guestUsername',
        'welcome_text': 'welcomeText',
        'collapse_login_form': 'collapseLoginForm',
        'per_project_permissions': 'perProjectPermissions',
        'email_verification': 'emailVerification',
        'modules': 'modules'
    }

    def __init__(self, allow_guest=None, guest_username=None, welcome_text=None, collapse_login_form=None, per_project_permissions=None, email_verification=None, modules=None, teamcity=None):  # noqa: E501
        """ServerAuthSettings - a model defined in Swagger"""  # noqa: E501

        self._allow_guest = None
        self._guest_username = None
        self._welcome_text = None
        self._collapse_login_form = None
        self._per_project_permissions = None
        self._email_verification = None
        self._modules = None
        self.discriminator = None

        if allow_guest is not None:
            self.allow_guest = allow_guest
        if guest_username is not None:
            self.guest_username = guest_username
        if welcome_text is not None:
            self.welcome_text = welcome_text
        if collapse_login_form is not None:
            self.collapse_login_form = collapse_login_form
        if per_project_permissions is not None:
            self.per_project_permissions = per_project_permissions
        if email_verification is not None:
            self.email_verification = email_verification
        if modules is not None:
            self.modules = modules
        super(ServerAuthSettings, self).__init__(teamcity=teamcity)

    @property
    def allow_guest(self):
        """Gets the allow_guest of this ServerAuthSettings.  # noqa: E501


        :return: The allow_guest of this ServerAuthSettings.  # noqa: E501
        :rtype: bool
        """
        return self._allow_guest

    @allow_guest.setter
    def allow_guest(self, allow_guest):
        """Sets the allow_guest of this ServerAuthSettings.


        :param allow_guest: The allow_guest of this ServerAuthSettings.  # noqa: E501
        :type: bool
        """

        self._allow_guest = allow_guest

    @property
    def guest_username(self):
        """Gets the guest_username of this ServerAuthSettings.  # noqa: E501


        :return: The guest_username of this ServerAuthSettings.  # noqa: E501
        :rtype: str
        """
        return self._guest_username

    @guest_username.setter
    def guest_username(self, guest_username):
        """Sets the guest_username of this ServerAuthSettings.


        :param guest_username: The guest_username of this ServerAuthSettings.  # noqa: E501
        :type: str
        """

        self._guest_username = guest_username

    @property
    def welcome_text(self):
        """Gets the welcome_text of this ServerAuthSettings.  # noqa: E501


        :return: The welcome_text of this ServerAuthSettings.  # noqa: E501
        :rtype: str
        """
        return self._welcome_text

    @welcome_text.setter
    def welcome_text(self, welcome_text):
        """Sets the welcome_text of this ServerAuthSettings.


        :param welcome_text: The welcome_text of this ServerAuthSettings.  # noqa: E501
        :type: str
        """

        self._welcome_text = welcome_text

    @property
    def collapse_login_form(self):
        """Gets the collapse_login_form of this ServerAuthSettings.  # noqa: E501


        :return: The collapse_login_form of this ServerAuthSettings.  # noqa: E501
        :rtype: bool
        """
        return self._collapse_login_form

    @collapse_login_form.setter
    def collapse_login_form(self, collapse_login_form):
        """Sets the collapse_login_form of this ServerAuthSettings.


        :param collapse_login_form: The collapse_login_form of this ServerAuthSettings.  # noqa: E501
        :type: bool
        """

        self._collapse_login_form = collapse_login_form

    @property
    def per_project_permissions(self):
        """Gets the per_project_permissions of this ServerAuthSettings.  # noqa: E501


        :return: The per_project_permissions of this ServerAuthSettings.  # noqa: E501
        :rtype: bool
        """
        return self._per_project_permissions

    @per_project_permissions.setter
    def per_project_permissions(self, per_project_permissions):
        """Sets the per_project_permissions of this ServerAuthSettings.


        :param per_project_permissions: The per_project_permissions of this ServerAuthSettings.  # noqa: E501
        :type: bool
        """

        self._per_project_permissions = per_project_permissions

    @property
    def email_verification(self):
        """Gets the email_verification of this ServerAuthSettings.  # noqa: E501


        :return: The email_verification of this ServerAuthSettings.  # noqa: E501
        :rtype: bool
        """
        return self._email_verification

    @email_verification.setter
    def email_verification(self, email_verification):
        """Sets the email_verification of this ServerAuthSettings.


        :param email_verification: The email_verification of this ServerAuthSettings.  # noqa: E501
        :type: bool
        """

        self._email_verification = email_verification

    @property
    def modules(self):
        """Gets the modules of this ServerAuthSettings.  # noqa: E501


        :return: The modules of this ServerAuthSettings.  # noqa: E501
        :rtype: AuthModules
        """
        return self._modules

    @modules.setter
    def modules(self, modules):
        """Sets the modules of this ServerAuthSettings.


        :param modules: The modules of this ServerAuthSettings.  # noqa: E501
        :type: AuthModules
        """

        self._modules = modules
