# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


class VersionedSettingsError(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'stack_trace_lines': 'list[str]',
        'message': 'str',
        'type': 'str',
        'file': 'str'
    }

    attribute_map = {
        'stack_trace_lines': 'stackTraceLines',
        'message': 'message',
        'type': 'type',
        'file': 'file'
    }

    def __init__(self, stack_trace_lines=None, message=None, type=None, file=None, teamcity=None):  # noqa: E501
        """VersionedSettingsError - a model defined in Swagger"""  # noqa: E501

        self._stack_trace_lines = None
        self._message = None
        self._type = None
        self._file = None
        self.discriminator = None

        if stack_trace_lines is not None:
            self.stack_trace_lines = stack_trace_lines
        if message is not None:
            self.message = message
        if type is not None:
            self.type = type
        if file is not None:
            self.file = file
        super(VersionedSettingsError, self).__init__(teamcity=teamcity)

    @property
    def stack_trace_lines(self):
        """Gets the stack_trace_lines of this VersionedSettingsError.  # noqa: E501


        :return: The stack_trace_lines of this VersionedSettingsError.  # noqa: E501
        :rtype: list[str]
        """
        return self._stack_trace_lines

    @stack_trace_lines.setter
    def stack_trace_lines(self, stack_trace_lines):
        """Sets the stack_trace_lines of this VersionedSettingsError.


        :param stack_trace_lines: The stack_trace_lines of this VersionedSettingsError.  # noqa: E501
        :type: list[str]
        """

        self._stack_trace_lines = stack_trace_lines

    @property
    def message(self):
        """Gets the message of this VersionedSettingsError.  # noqa: E501


        :return: The message of this VersionedSettingsError.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this VersionedSettingsError.


        :param message: The message of this VersionedSettingsError.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def type(self):
        """Gets the type of this VersionedSettingsError.  # noqa: E501


        :return: The type of this VersionedSettingsError.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VersionedSettingsError.


        :param type: The type of this VersionedSettingsError.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def file(self):
        """Gets the file of this VersionedSettingsError.  # noqa: E501


        :return: The file of this VersionedSettingsError.  # noqa: E501
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this VersionedSettingsError.


        :param file: The file of this VersionedSettingsError.  # noqa: E501
        :type: str
        """

        self._file = file
