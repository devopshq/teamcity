# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.group import Group  # noqa: F401,E501
# from dohq_teamcity.models.users import Users  # noqa: F401,E501


class GroupApprovalRule(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'group': 'Group',
        'required_approvals_count': 'int',
        'currently_approved_by': 'Users'
    }

    attribute_map = {
        'group': 'group',
        'required_approvals_count': 'requiredApprovalsCount',
        'currently_approved_by': 'currentlyApprovedBy'
    }

    def __init__(self, group=None, required_approvals_count=None, currently_approved_by=None, teamcity=None):  # noqa: E501
        """GroupApprovalRule - a model defined in Swagger"""  # noqa: E501

        self._group = None
        self._required_approvals_count = None
        self._currently_approved_by = None
        self.discriminator = None

        if group is not None:
            self.group = group
        if required_approvals_count is not None:
            self.required_approvals_count = required_approvals_count
        if currently_approved_by is not None:
            self.currently_approved_by = currently_approved_by
        super(GroupApprovalRule, self).__init__(teamcity=teamcity)

    @property
    def group(self):
        """Gets the group of this GroupApprovalRule.  # noqa: E501


        :return: The group of this GroupApprovalRule.  # noqa: E501
        :rtype: Group
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this GroupApprovalRule.


        :param group: The group of this GroupApprovalRule.  # noqa: E501
        :type: Group
        """

        self._group = group

    @property
    def required_approvals_count(self):
        """Gets the required_approvals_count of this GroupApprovalRule.  # noqa: E501


        :return: The required_approvals_count of this GroupApprovalRule.  # noqa: E501
        :rtype: int
        """
        return self._required_approvals_count

    @required_approvals_count.setter
    def required_approvals_count(self, required_approvals_count):
        """Sets the required_approvals_count of this GroupApprovalRule.


        :param required_approvals_count: The required_approvals_count of this GroupApprovalRule.  # noqa: E501
        :type: int
        """

        self._required_approvals_count = required_approvals_count

    @property
    def currently_approved_by(self):
        """Gets the currently_approved_by of this GroupApprovalRule.  # noqa: E501


        :return: The currently_approved_by of this GroupApprovalRule.  # noqa: E501
        :rtype: Users
        """
        return self._currently_approved_by

    @currently_approved_by.setter
    def currently_approved_by(self, currently_approved_by):
        """Sets the currently_approved_by of this GroupApprovalRule.


        :param currently_approved_by: The currently_approved_by of this GroupApprovalRule.  # noqa: E501
        :type: Users
        """

        self._currently_approved_by = currently_approved_by
