# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.node import Node  # noqa: F401,E501


class Nodes(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'count': 'int',
        'node': 'list[Node]'
    }

    attribute_map = {
        'count': 'count',
        'node': 'node'
    }

    def __init__(self, count=None, node=None, teamcity=None):  # noqa: E501
        """Nodes - a model defined in Swagger"""  # noqa: E501

        self._count = None
        self._node = None
        self.discriminator = None

        if count is not None:
            self.count = count
        if node is not None:
            self.node = node
        super(Nodes, self).__init__(teamcity=teamcity)

    @property
    def count(self):
        """Gets the count of this Nodes.  # noqa: E501


        :return: The count of this Nodes.  # noqa: E501
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this Nodes.


        :param count: The count of this Nodes.  # noqa: E501
        :type: int
        """

        self._count = count

    @property
    def node(self):
        """Gets the node of this Nodes.  # noqa: E501


        :return: The node of this Nodes.  # noqa: E501
        :rtype: list[Node]
        """
        return self._node

    @node.setter
    def node(self, node):
        """Sets the node of this Nodes.


        :param node: The node of this Nodes.  # noqa: E501
        :type: list[Node]
        """

        self._node = node
